/*! @component: SvCard */
@layer components
  .sv-card
    --default-layer-container-color-surface: transparent
    --default-layer-elevation-level: 0
    --default-layer-state-color-surface: transparent
    --default-layer-outline-color: transparent
    --default-layer-outline-thickness: 0
    --default-layer-outline-opacity: 0

    // reset for `button`
    border: none
    outline: none
    appearance: none
    font: inherit
    background-color: transparent
    // reset for `a`
    text-decoration: none

    position: relative
    display: inline-flex
    padding: 0
    text-align: start
    border-radius: var(--sv-shape-corner, var(--sv-comp-card-shape-corner, var(--sv-sys-shape-corner-medium)))
    transform-style: preserve-3d

    &__layer-bottom
      position: absolute
      inset: 0
      border-radius: inherit
      pointer-events: none

    &__layer-content
      display: grid
      gap: 0
      min-block-size: 100%
      min-inline-size: 100%
      border-radius: inherit

      &:where(.sv-card__layer-content--vertical)
        grid-template-columns: [full-start] 16px [padded-start] 1fr [padded-end] 16px [full-end]
        grid-template-rows: [full-start media-start-start] min-content [media-start-end header-start] min-content [header-end actions-start-start] min-content [actions-start-end content-start] 1fr [content-end actions-end-start] min-content [actions-end-end footer-start] min-content [footer-end media-end-start] min-content [media-end-end full-end]

        > :where(*)
          grid-column: padded
          grid-row: content

      &:where(.sv-card__layer-content--horizontal)
        grid-template-columns: [full-start media-start-start] min-content [media-start-end actions-start-start] min-content [actions-start-end content-start] 1fr [content-end actions-end-start] min-content [actions-end-end media-end-start] min-content [media-end-end full-end]
        grid-template-rows: [full-start header-start] min-content [header-end actions-start-start] min-content [actions-start-end content-start] 1fr [content-end actions-end-start] min-content [actions-end-end footer-start] min-content [footer-end full-end]

        > :where(*)
          grid-column: content
          margin-inline: 16px

      > :where(.sv-card--border-radius-inherit-ss)
        border-start-start-radius: inherit

      > :where(.sv-card--border-radius-inherit-se)
        border-start-end-radius: inherit

      > :where(.sv-card--border-radius-inherit-es)
        border-end-start-radius: inherit

      > :where(.sv-card--border-radius-inherit-ee)
        border-end-end-radius: inherit

    &:where(.sv-card--interactive)
      cursor: pointer

    > :where(.sv-ripple)
      --sv-ripple-color: var(--sv-state-pressed-ripple-color, var(--sv-comp-card-state-pressed-ripple-color, var(--sv-sys-color-on-surface)))

    > :where(.sv-layer-elevation)
      --sv-layer-elevation-opacity: 1
      --sv-layer-elevation-level: var(--sv-layer-elevation-level, var(--sv-comp-card-layer-elevation-level, var(--default-layer-elevation-level)))
      --sv-layer-elevation-active-opacity: 0
      --sv-layer-elevation-active-level: clamp(0, calc(1 + var(--sv-layer-elevation-level)), 5)
      --sv-layer-elevation-color-shadow: var(--sv-layer-elevation-color-shadow, var(--sv-comp-card-layer-elevation-color-shadow, var(--sv-sys-color-shadow)))

    &:where(.sv-card--enabled)
      > :where(.sv-layer-elevation)
        --sv-layer-elevation-level: var(--sv-state-enabled-layer-elevation-level, var(--sv-comp-card-state-enabled-layer-elevation-level, var(--default-layer-elevation-level)))

      > :where(.sv-layer-container)
        --sv-layer-container-color-surface: var(--sv-state-enabled-layer-container-color-surface, var(--sv-comp-card-state-enabled-layer-container-color-surface, var(--default-layer-container-color-surface)))

      > :where(.sv-layer-outline)
        --sv-layer-outline-color: var(--sv-state-enabled-layer-outline-color, var(--sv-comp-card-state-enabled-layer-outline-color, var(--default-layer-outline-color)))
        --sv-layer-outline-thickness: var(--sv-state-enabled-layer-outline-thickness, var(--sv-comp-card-state-enabled-layer-outline-thickness, var(--default-layer-outline-thickness)))
        --sv-layer-outline-opacity: var(--sv-state-enabled-layer-outline-opacity, var(--sv-comp-card-state-enabled-layer-outline-opacity, var(--default-layer-outline-opacity)))

    &:where(.sv-card--disabled)
      opacity: var(--sv-state-disabled-container-opacity, var(--sv-comp-card-state-disabled-container-opacity, var(--sv-sys-state-disabled-container-opacity)))
      cursor: not-allowed

      > :where(.sv-layer-elevation)
        --sv-layer-elevation-level: var(--sv-state-disabled-layer-elevation-level, var(--sv-comp-card-state-disabled-layer-elevation-level, var(--default-layer-elevation-level)))

      > :where(.sv-layer-container)
        --sv-layer-container-color-surface: var(--sv-state-disabled-layer-container-color-surface, var(--sv-comp-card-state-disabled-layer-container-color-surface, var(--default-layer-container-color-surface)))

      > :where(.sv-layer-outline)
        --sv-layer-outline-color: var(--sv-state-disabled-layer-outline-color, var(--sv-comp-card-state-disabled-layer-outline-color, var(--default-layer-outline-color)))
        --sv-layer-outline-thickness: var(--sv-state-disabled-layer-outline-thickness, var(--sv-comp-card-state-disabled-layer-outline-thickness, var(--default-layer-outline-thickness)))
        --sv-layer-outline-opacity: var(--sv-state-disabled-layer-outline-opacity, var(--sv-comp-card-state-disabled-layer-outline-opacity, var(--default-layer-outline-opacity)))

    @media (hover: hover)
      &:where(.sv-card--interactive:hover)
        > :where(.sv-layer-elevation)
          --sv-layer-elevation-opacity: 0
          --sv-layer-elevation-active-opacity: 1

        > :where(.sv-layer-outline)
          --sv-layer-outline-color: var(--sv-state-hovered-layer-outline-color, var(--sv-comp-card-state-hovered-layer-outline-color, var(--default-layer-outline-color)))
          --sv-layer-outline-thickness: var(--sv-state-hovered-layer-outline-thickness, var(--sv-comp-card-state-hovered-layer-outline-thickness, var(--default-layer-outline-thickness)))
          --sv-layer-outline-opacity: var(--sv-state-hovered-layer-outline-opacity, var(--sv-comp-card-state-hovered-layer-outline-opacity, var(--default-layer-outline-opacity)))

        > :where(.sv-layer-state)
          --sv-layer-state-color-surface: var(--sv-state-hovered-layer-state-color-surface, var(--sv-comp-card-state-hovered-layer-state-color-surface, var(--sv-sys-color-on-surface)))
          --sv-layer-state-opacity: var(--sv-state-hovered-layer-state-opacity, var(--sv-comp-card-state-hovered-layer-state-opacity, var(--sv-sys-state-hovered-layer-state-opacity)))

    &:where(.sv-card--interactive:focus-visible)
      > :where(.sv-layer-elevation)
        --sv-layer-elevation-opacity: 1
        --sv-layer-elevation-active-opacity: 0

      > :where(.sv-layer-focus-indicator)
        --sv-layer-focus-indicator-color: var(--sv-state-focused-layer-focus-indicator-color, var(--sv-comp-card-state-focused-layer-focus-indicator-color, var(--sv-sys-color-secondary)))
        --sv-layer-focus-indicator-thickness: var(--sv-state-focused-layer-focus-indicator-thickness, var(--sv-comp-card-state-focused-layer-focus-indicator-thickness, var(--sv-sys-state-focused-layer-focus-indicator-thickness)))
        --sv-layer-focus-indicator-outer-offset: var(--sv-state-focused-layer-focus-indicator-outer-offset, var(--sv-comp-card-state-focused-layer-focus-indicator-outer-offset, var(--sv-sys-state-focused-layer-focus-indicator-outer-offset)))

    &:where(.sv-card--interactive:not(.sv-card--pointer-pressed):focus-within)
      > :where(.sv-layer-elevation)
        --sv-layer-elevation-opacity: 1
        --sv-layer-elevation-active-opacity: 0

      > :where(.sv-layer-outline)
        --sv-layer-outline-color: var(--sv-state-focused-layer-outline-color, var(--sv-comp-card-state-focused-layer-outline-color, var(--default-layer-outline-color)))
        --sv-layer-outline-thickness: var(--sv-state-focused-layer-outline-thickness, var(--sv-comp-card-state-focused-layer-outline-thickness, var(--default-layer-outline-thickness)))
        --sv-layer-outline-opacity: var(--sv-state-focused-layer-outline-opacity, var(--sv-comp-card-state-focused-layer-outline-opacity, var(--default-layer-outline-opacity)))

      > :where(.sv-layer-state)
        --sv-layer-state-color-surface: var(--sv-state-focused-layer-state-color-surface, var(--sv-comp-card-state-focused-layer-state-color-surface, var(--sv-sys-color-on-surface)))
        --sv-layer-state-opacity: var(--sv-state-focused-layer-state-opacity, var(--sv-comp-card-state-focused-layer-state-opacity, var(--sv-sys-state-focused-layer-state-opacity)))

    &:where(.sv-card--interactive:active)
      > :where(.sv-layer-elevation)
        --sv-layer-elevation-opacity: 1
        --sv-layer-elevation-active-opacity: 0

      > :where(.sv-layer-outline)
        --sv-layer-outline-color: var(--sv-state-pressed-layer-outline-color, var(--sv-comp-card-state-pressed-layer-outline-color, var(--default-layer-outline-color)))
        --sv-layer-outline-thickness: var(--sv-state-pressed-layer-outline-thickness, var(--sv-comp-card-state-pressed-layer-outline-thickness, var(--default-layer-outline-thickness)))
        --sv-layer-outline-opacity: var(--sv-state-pressed-layer-outline-opacity, var(--sv-comp-card-state-pressed-layer-outline-opacity, var(--default-layer-outline-opacity)))

      > :where(.sv-layer-state)
        --sv-layer-state-color-surface: var(--sv-state-pressed-layer-state-color-surface, var(--sv-comp-card-state-pressed-layer-state-color-surface, var(--sv-sys-color-on-surface)))
        --sv-layer-state-opacity: var(--sv-state-pressed-layer-state-opacity, var(--sv-comp-card-state-pressed-layer-state-opacity, var(--sv-sys-state-pressed-layer-state-opacity)))

    &:where(.sv-card--interactive.sv-card--dragged)
      > :where(.sv-layer-elevation)
        --sv-layer-elevation-opacity: 0
        --sv-layer-elevation-active-opacity: 1
        --sv-layer-elevation-active-level: clamp(0, calc(3 + var(--sv-layer-elevation-level)), 5)

      > :where(.sv-layer-outline)
        --sv-layer-outline-color: var(--sv-state-dragged-layer-outline-color, var(--sv-comp-card-state-dragged-layer-outline-color, var(--default-layer-outline-color)))
        --sv-layer-outline-thickness: var(--sv-state-dragged-layer-outline-thickness, var(--sv-comp-card-state-dragged-layer-outline-thickness, var(--default-layer-outline-thickness)))
        --sv-layer-outline-opacity: var(--sv-state-dragged-layer-outline-opacity, var(--sv-comp-card-state-dragged-layer-outline-opacity, var(--default-layer-outline-opacity)))

      > :where(.sv-layer-state)
        --sv-layer-state-color-surface: var(--sv-state-dragged-layer-state-color-surface, var(--sv-comp-card-state-dragged-layer-state-color-surface, var(--sv-sys-color-on-surface)))
        --sv-layer-state-opacity: var(--sv-state-dragged-layer-state-opacity, var(--sv-comp-card-state-dragged-layer-state-opacity, var(--sv-sys-state-dragged-layer-state-opacity)))

    &--elevated
      --default-layer-elevation-level: 1

      > :where(.sv-layer-outline)
        display: none

      &:where(.sv-card--enabled)
        --default-layer-container-color-surface: var(--sv-sys-color-surface-container-low)

      &:where(.sv-card--disabled)
        --default-layer-container-color-surface: var(--sv-sys-color-surface)

    &--filled
      > :where(.sv-layer-outline)
        display: none

      &:where(.sv-card--enabled)
        --default-layer-container-color-surface: var(--sv-sys-color-surface-container-highest)

      &:where(.sv-card--disabled)
        --default-layer-container-color-surface: var(--sv-sys-color-surface-variant)

    &--outlined
      --default-layer-outline-thickness: 1px
      --default-layer-outline-opacity: 1

      &:where(.sv-card--enabled)
        --default-layer-container-color-surface: var(--sv-sys-color-surface)
        --default-layer-outline-color: var(--sv-sys-color-outline-variant)

      &:where(.sv-card--disabled)
        --default-layer-outline-color: var(--sv-sys-color-outline)

      &:where(.sv-card--interactive:hover)
        --default-layer-outline-color: var(--sv-sys-color-outline-variant)

      &:where(.sv-card--interactive:not(.sv-card--pointer-pressed):focus-within)
        --default-layer-outline-color: var(--sv-sys-color-on-surface)

      &:where(.sv-card--interactive:active)
        --default-layer-outline-color: var(--sv-sys-color-outline-variant)

      &:where(.sv-card--interactive.sv-card--dragged)
        --default-layer-outline-color: var(--sv-sys-color-outline-variant)
